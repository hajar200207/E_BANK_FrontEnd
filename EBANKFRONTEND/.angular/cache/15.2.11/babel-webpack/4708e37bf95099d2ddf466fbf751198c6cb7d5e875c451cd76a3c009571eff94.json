{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  intercept(req, next) {\n    const authToken = localStorage.getItem('authToken');\n    if (authToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n      });\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EACxBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIF,SAAS,EAAE;MACX,MAAMG,MAAM,GAAGL,GAAG,CAACM,KAAK,CAAC;QACrBC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGN,SAAS;OAClE,CAAC;MACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC;KAC7B,MAAM;MACH,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;;EAE/B;EAAC;qBAXQF,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAY,SAAfZ,eAAe;EAAA","names":["AuthInterceptor","intercept","req","next","authToken","localStorage","getItem","cloned","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\E_BANK_FrontEnd\\EBANKFRONTEND\\src\\app\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const authToken = localStorage.getItem('authToken');\r\n        if (authToken) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n            });\r\n            return next.handle(cloned);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}