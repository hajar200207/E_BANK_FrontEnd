{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  login() {\n    this.authService.login(this.username, this.password).subscribe(() => {\n      this.router.navigate(['/dashboard']); // Rediriger vers la page de tableau de bord après la connexion réussie\n    }, error => {\n      this.errorMessage = 'Invalid username or password';\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,KAAK;IACH,IAAI,CAACF,WAAW,CAACE,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAC/CC,SAAS,CACN,MAAK;MACH,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACC,YAAY,GAAG,8BAA8B;IACpD,CAAC,CACJ;EACP;CACD;AAlBYV,cAAc,eAL1BD,SAAS,CAAC;EACTY,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWb,cAAc,CAkB1B;SAlBYA,cAAc","names":["Component","LoginComponent","constructor","authService","router","login","username","password","subscribe","navigate","error","errorMessage","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\E_BANK_FrontEnd\\EBANKFRONTEND\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string;\n  password: string;\n  errorMessage: string;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  login() {\n    this.authService.login(this.username, this.password)\n        .subscribe(\n            () => {\n              this.router.navigate(['/dashboard']); // Rediriger vers la page de tableau de bord après la connexion réussie\n            },\n            error => {\n              this.errorMessage = 'Invalid username or password';\n            }\n        );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}