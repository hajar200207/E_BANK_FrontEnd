{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  login() {\n    this.authService.login(this.username, this.password).subscribe(() => {\n      this.router.navigate(['/dashboard']);\n    }, error => {\n      this.errorMessage = 'Invalid username or password';\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKvBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAJ5D,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;IACrB,iBAAY,GAAW,EAAE;EAE8C;EAEvEC,KAAK;IACD,IAAI,CAACF,WAAW,CAACE,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAC/CC,SAAS,CACN,MAAK;MACD,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC,EACDC,KAAK,IAAG;MACJ,IAAI,CAACC,YAAY,GAAG,8BAA8B;IACtD,CAAC,CACJ;EACT;CACH;AAlBYV,cAAc,eAL1BD,SAAS,CAAC;EACPY,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACtC,CAAC,GACWb,cAAc,CAkB1B;SAlBYA,cAAc","names":["Component","LoginComponent","constructor","authService","router","login","username","password","subscribe","navigate","error","errorMessage","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\E_BANK_FrontEnd\\EBANKFRONTEND\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../Services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n    username: string = '';\n    password: string = '';\n    errorMessage: string = '';\n\n    constructor(private authService: AuthService, private router: Router) {}\n\n    login() {\n        this.authService.login(this.username, this.password)\n            .subscribe(\n                () => {\n                    this.router.navigate(['/dashboard']);\n                },\n                error => {\n                    this.errorMessage = 'Invalid username or password';\n                }\n            );\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}