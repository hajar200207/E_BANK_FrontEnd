{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/auth';\n    this.tokenKey = 'token';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  setToken(token) {\n    localStorage.setItem(this.tokenKey, token);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  clearToken() {\n    localStorage.removeItem(this.tokenKey);\n  }\n  signup(registerUser) {\n    return this.http.post(`${this.apiUrl}/signup`, registerUser, this.httpOptions);\n  }\n  login(loginUser) {\n    return this.http.post(`${this.apiUrl}/login`, loginUser, this.httpOptions);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAS9D,OAAM,MAAOC,WAAW;EAUtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAThB,WAAM,GAAG,gCAAgC;IACzC,aAAQ,GAAG,OAAO;IAE1B,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAEuC;EAExCK,QAAQ,CAACC,KAAa;IACpBC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,QAAQ,EAAEH,KAAK,CAAC;EAC5C;EAEAI,QAAQ;IACN,OAAOH,YAAY,CAACI,OAAO,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC5C;EAEAG,UAAU;IACRL,YAAY,CAACM,UAAU,CAAC,IAAI,CAACJ,QAAQ,CAAC;EACxC;EAEAK,MAAM,CAACC,YAA6B;IAClC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAM,GAAG,IAAI,CAACC,MAAM,SAAS,EAAEF,YAAY,EAAE,IAAI,CAACG,WAAW,CAAC;EACrF;EAEAC,KAAK,CAACC,SAAuB;IAC3B,OAAO,IAAI,CAACjB,IAAI,CAACa,IAAI,CAAgB,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEG,SAAS,EAAE,IAAI,CAACF,WAAW,CAAC;EAC3F;EAAC;qBA9BUjB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAoB,SAAXpB,WAAW;IAAAqB,YAFV;EAAM","names":["HttpHeaders","AuthService","constructor","http","headers","setToken","token","localStorage","setItem","tokenKey","getToken","getItem","clearToken","removeItem","signup","registerUser","post","apiUrl","httpOptions","login","loginUser","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\E_BANK_FrontEnd\\EBANKFRONTEND\\src\\app\\Services\\auth\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {LoginUserDto} from \"../login-user.dto\";\r\nimport { RegisterUserDto } from \"../../dto/register-user.dto\";\r\nimport { LoginResponse } from \"../../model/login-response/login-response\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'http://localhost:8080/api/auth';\r\n  private tokenKey = 'token';\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  setToken(token: string):void{\r\n    localStorage.setItem(this.tokenKey, token);\r\n  }\r\n\r\n  getToken(): string | null{\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  clearToken(): void{\r\n    localStorage.removeItem(this.tokenKey);\r\n  }\r\n\r\n  signup(registerUser: RegisterUserDto): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/signup`, registerUser, this.httpOptions);\r\n  }\r\n\r\n  login(loginUser: LoginUserDto): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>(`${this.apiUrl}/login`, loginUser, this.httpOptions);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}